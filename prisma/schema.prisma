generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("FAVOMS_DB_URL")
}

model Mylist {
  id    Int          @id @default(autoincrement())
  name  String
  items Item[]
  order MylistOrder? /// actualy one to one
}

model MylistOrder {
  mylistId Int    @id
  mylist   Mylist @relation(fields: [mylistId], references: [id], onDelete: Cascade)
  position Int    @unique @default(autoincrement())
}

model Item {
  id      String   @id
  mylists Mylist[]

  book  Book?
  video Video?
}

model Book {
  itemId String @id
  item   Item   @relation(fields: [itemId], references: [id], onDelete: Cascade)

  title     String
  titleRuby String

  publishedAt DateTime?
  publishing  BookPublishing[]

  authorings BookAuthoring[]
}

model BookAuthoring {
  itemId String
  book   Book   @relation(fields: [itemId], references: [itemId], onDelete: Cascade)

  authorId String
  author   BookAuthor @relation(fields: [authorId], references: [id], onDelete: Cascade)

  @@id([itemId, authorId])
}

model BookPublishing {
  itemId String
  book   Book   @relation(fields: [itemId], references: [itemId], onDelete: Cascade)

  publisherId String
  publisher   BookPublisher @relation(fields: [publisherId], references: [id], onDelete: Cascade)

  @@id([itemId, publisherId])
}

model BookAuthor {
  id String @id

  name     String @unique
  nameRuby String

  authorings BookAuthoring[]
}

model BookPublisher {
  id String @id

  name     String @unique
  nameRuby String

  publishings BookPublishing[]
}

model Video {
  itemId String @id
  item   Item   @relation(fields: [itemId], references: [id], onDelete: Cascade)

  title     String
  titleRuby String

  castings VideoCasting[]

  publishedAt DateTime?
}

model VideoCasting {
  itemId String
  video  Video  @relation(fields: [itemId], references: [itemId], onDelete: Cascade)

  castId String
  cast   Cast   @relation(fields: [castId], references: [id], onDelete: Cascade)

  @@id([itemId, castId])
}

model Cast {
  id String @id

  name     String @unique
  nameRuby String

  castings VideoCasting[]
}

model ImportHistory {
  id   Int      @id @default(autoincrement())
  name String   @unique
  json Json
  at   DateTime
}
